AWS SQS

- One of the oldest services from AWS 
- Message queue service
- Enables web service apps to quickly queue messages that one components generate and anopther consumes 
- temporary repo for messages awaiting processing
- Visibility timeout - time for app server to process the message 
- removes dependencies upon individual components. Decoupling infrastructure 
- Queue resolves issue that arise if procuder is producing work faster than the consumer can process it or if producer or consumer are only intermittently connected to netwrok
- SQS - Pull based not push based, 
- 256 kb in size messages
- text data including xml, json and unformatted text
- guarantess messages will be processed atleast once 
- upto 14 days messages can be kept in queue from one min to 14 days 
- default retention period - 4 days 

SQS queue types 
- 2 types of queues - Standard queue, FIFO queue 
- standard queue - default which provides best-effort ordering 
- fifo - first in first out. order is strictly preserved 

Standard Queue 
- nearly unlimited no of transactions per second
-  guarantess message is delivered atleast once 
- best effort ordering which ensures messages delivered in same order they are sent 

FIFO Queue 
- order in which messages are sent and received strictly preserved
- message is delivered once and remains available until consumer processes and deletes it. duplicates not introduced 
- fifo queues are limited to 300 transactions per second but have all capabilities of standard queues
-good for banking transactions which need to happen in strict manner 

SQS settings 
- Visibility timeout - amount of time that message is invisible in sqs queue after reader picks up that message. default timeout 30 secs 
-  if job not processed within that time, message will become visible again and another reader will process it 
- max Visibility timeout is 12 hrs 
- Short polling - returns response immediately even if message queue being polled is empty. can result in lot of empty responses if nothing in queue. will have to pay for these resources
- Long Polling  - periodically polls the queue, doesn't return response until message arrives in message queue or long poll times out, can save money, long polling is generally preferred over short polling 

SQS delay queues
- postponse delivery of new messages to queue for number of seconds 
- mmessage sent to delay queue remain invisible to consumers for duration of delay period 
- default delay is 0 seconds, max is 900 
- for standard queues, changing setting no affect the delay of msgs already in queue only new message 
- fifo queue - affects delay of messages already in queue 
- delay queue only to be used when 
a) large distributed apps which may need to introduce delay in processing
b) need to apply delay to entire queue of messages

Best practice for managing large sqs messages using s3 
- for large sqs messages - 256 kb upto 2gb in size 
- use s3 to store the messages 
- need to use AMAZON sqs extended client library for java to manage them 
- need the aws sdk for java - provides api for s3 bucket and object operations 
-  AMAZON sqs extended client library for java  allows to 
a) specify messages are always stored in amazon s3 or only messages > 256 kb 
b) send message which references a message object stored in s3 
c) get message object from s3 
d) delete message object from s3 

SNS  
- Simple Notification Service 
- service to setup, operate and send notifications from the cloud 
- messages sent from app can be immediately delivered to subscribers or other apps 
- Push notifications - to devices such as ios, android , sms and email (can send to SQS also), trigger lambda function to process info in the msg, publish to another sns topic, or send msg to another aws service 
- pub and sub model - application publish or push messages to topic. subscribers receive messages from topic 
- notifications delivered using push mechanism. eleminates need to periodically check or poll for new info and updates 
- topic - access point, allowing recipients to subscribe to and receive identical copies of same Notification. sns delivers appropriately-formatted copies of the message to each subscriber 
- Durability  - durable storage, prevents messages from being lost . all messages published to sns are stored redundantly across multiple azs 
- benefits - instantaneous, simple to setup and use , flexible, inexpensive, easy to configure, managed service 
- SNS - messaging service, sns is push based and are basically push notifications 
- SQS - messaging service, sqs is pull based (held in  a queue), think polling the queue for messages 

