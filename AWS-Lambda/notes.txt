Serverless 

- Allows to run application code in cloud without having to worry about any servers
-AWS handles infra mgmt tasks so that focus is on code 

AWS handles
-  Capacity provisioning
- patching
-auto scaling
- high availability

Competitive advantage
- Speed to market. Release code quickly and release 
- Extremely scalable - scales automatically 
- Lower costs. no overprovisioning
- event drvien . only charge when executed 
- focus on application . instead of configuring infra 


What is Lambda 

- Serverless compute - runs code in aws without provisioning in aws 
- lambda takes care of everything 
- Support for Go, Java, Node js 
- upload code and Go
- Enterrpsie feature auto scaling 

- Charged based numberof requests, duration and amount of memory used by Lambda function 
- Request - first 1 mil reqs per month are free, $0.20 / million reqs after that 
- duration - charged 1 millisecond increments . price depends on amount of memory allocated to lambda func 
- Price per gb-second 

Lambda - event driven architecture 
- Event driven. auto triggerred by other aws services 
- triggerred by events. changes made to data in s3 bucket or dynamodb table 
- triggerred by user reqs. using api gateway to configure http endpoint

AWS Service that invoke lambda  
- dynamodb
0 alexa
- sns 
- sqs 
- cloudformation
- cloudwatch 
- codecommit 
- codepipeline 

API 
- interact with web api. and also apps use to communicate with each other 

API gateway -

Publish , maintain and monitor apis at any scale 
frontdoor for apps to access data, business logic or functionally from backend services
supported api types- restful apis, websocket apis(real time) 

restful apis 
- Optimised for serverless and web apps 
- stateless. nothing held 
- support json 

API gateway provides single endpoint for all client traffic interacting with backend of application

- allows to connect apps to lambda, ec2, elastic beansstalk 
- supports multiple endpoints and targets
- supports multiple version on apis . diff for beta, prod stages 

API gateway 
- serverless 
- integrated with cloudwatch 
- supports throttling. managing traffic thru throttling

Lambda versions 

- When lambda function created, only one version - $LATEST
- When new version of code uploaded, that version will be $LATEST
- Can create multiple versions of function code and user aliases to reference version you want to use as part of arn 
- in dev env , need to maintain few versions of same func as code is developed and tested 
- alias - pointer to specific version of func code 
- if app uses alias , need to update ARN that is being used if new code is to be used

Concurrent executions
- there is a Concurrent execution limit for lambda 
- safety feature to limit no of concurrent executions across all funcs in given region per acct 
- default - 1000 per region 
- limit reached. error -> TooManyRequestsException
- HTTP status code received - 429 
- request throughput limit exceeded
- reserved concurrency guarantees that set number of execution which will be available for critical function 
- Remedy to get limit raised is talking to AWS support

Lambdas and VPC 

- Some use cases require lambda to access resource inside private VPC . e.x. read/write to RDS db or shut down EC2 instance for a security alert 


To enable lambda to access vpc resources 
- need to allow function to conecct to the private subnet 
- lambda needs vpc config info such as 
1) Private Subnet ID 
2) security group id (with required access) 
3) Lambda uses this info to setup ENIs using available IP address from private subnet
- add vpc info to lambda function config using vpc-config parameter 

